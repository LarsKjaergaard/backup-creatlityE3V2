#=======================================================================
# Includes 
#-----------------------------------------------------------------------
[include fluidd.cfg]
[include macros_klipperscreen.cfg]

#=======================================================================
# Controllers
#-----------------------------------------------------------------------
[mcu]
canbus_uuid: 345528508a29

#[mcu HermitCrab]
#canbus_uuid=f815e584a81f

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[temperature_sensor MCUTemp]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0
max_temp: 100

[temperature_sensor HermitCrabTemp]
sensor_type: temperature_mcu
sensor_mcu: HermitCrab
min_temp: 0
max_temp: 100

#=======================================================================
# Main
#-----------------------------------------------------------------------
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

#=======================================================================
# Extruder
#-----------------------------------------------------------------------

[adxl345]
cs_pin: HermitCrab: PB12
spi_bus: spi2
axes_map: y,z,-x

#[filament_switch_sensor switch_sensor]
#switch_pin: ^PC5
#pause_on_runout: False
#runout_gcode:
#insert_gcode:

[heater_bed]
heater_pin: PB2 #HB
sensor_type: EPCOS 100K B57560G104F #Generic 3950
sensor_pin: PA3 #TB
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

#=======================================================================
# Axis
#-----------------------------------------------------------------------

[stepper_x]
step_pin: PA14
dir_pin: !PA10
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC4
position_endstop: -33
position_min: -33
position_max: 250
homing_speed: 50

[stepper_y]
step_pin: PC8
dir_pin: !PA15
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PB0
position_endstop: 0
position_min: 0
position_max: 215
homing_speed: 50

[stepper_z]
step_pin: PD2
dir_pin: PD4
enable_pin: !PD3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop 
position_min: 0
position_max: 200

[stepper_z1] 
step_pin: PB7 
dir_pin: !PB6 
enable_pin: !PB4 
microsteps: 16 
rotation_distance: 8 
endstop_pin:probe:z_virtual_endstop

[extruder]
step_pin: HermitCrab: PA6
dir_pin: !HermitCrab: PA7
enable_pin: !HermitCrab: PA5
microsteps: 16
rotation_distance: 3.483
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: HermitCrab: PA2
sensor_type: ATC Semitec 104NT-4-R025H42G
min_temp: 0
max_temp: 300
sensor_pin: HermitCrab: PA1
max_extrude_only_distance: 150.0
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

#=======================================================================
# Stepper Drivers
#-----------------------------------------------------------------------

[tmc2209 extruder]
uart_pin: HermitCrab: PB0
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_x]
uart_pin: PB8
#diag_pin: PC4
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PC9
#diag_pin: PB0
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PD0
#diag_pin: PC6
run_current: 0.650
stealthchop_threshold: 999999

[tmc2209 stepper_z1] 
uart_pin: PB5 
run_current: 0.650 
stealthchop_threshold: 999999

[fan]
pin: HermitCrab: PA4

[heater_fan hotend_fan]
pin: HermitCrab: PA3
heater: extruder
heater_temp: 50.0

[fan_generic mcu_fan]
pin: PA8

[neopixel hotend_rgb]
pin: HermitCrab:PA8
chain_count: 2
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[bltouch]
sensor_pin: ^HermitCrab:PB2
control_pin: HermitCrab:PB1
#z_offset: 3.35
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
x_offset: 38.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -36.0
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.

[safe_z_home]
home_xy_position: 72, 146
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 10
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
z_hop_speed: 15.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.


[bed_screws]
screw1: 25,27
#   The X, Y coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to that is directly above the bed
#   screw (or as close as possible while still being above the bed).
#   This parameter must be provided.
screw1_name: xmin_ymin
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
#screw1_fine_adjust:
#   An X, Y coordinate to command the nozzle to so that one can fine
#   tune the bed leveling screw. The default is to not perform fine
#   adjustments on the bed screw.
screw2: 193,27
screw2_name: xmax_ymin

screw3: 193,195
screw3_name: xmax_ymax

screw4: 25,195
screw4_name: xmin_ymax

#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   when moving from one screw location to the next. The default is 5.
#probe_height: 0
#   The height of the probe (in mm) after adjusting for the thermal
#   expansion of bed and nozzle. The default is zero.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#probe_speed: 5
#   The speed (in mm/s) when moving from a horizontal_move_z position
#   to a probe_height position. The default is 5.

[screws_tilt_adjust]
screw1: -15,62
#   The (X, Y) coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to so that the probe is directly
#   above the bed screw (or as close as possible while still being
#   above the bed). This is the base screw used in calculations. This
#   parameter must be provided.
screw1_name: xmin_ymin
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.

screw2: 155,62
screw2_name: xmax_ymin

screw3: 155,231
screw3_name: xmax_ymax

screw4: -15,231
screw4_name: xmin_ymax
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#screw_thread: CW-M3
#   The type of screw used for bed leveling, M3, M4, or M5, and the
#   rotation direction of the knob that is used to level the bed.
#   Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5.
#   Default value is CW-M3 which most printers use. A clockwise
#   rotation of the knob decreases the gap between the nozzle and the
#   bed. Conversely, a counter-clockwise rotation increases the gap.

[bed_mesh]
speed: 120
horizontal_move_z: 8
mesh_min: 5, 0
mesh_max: 212, 179
probe_count: 4, 4

###############################################################################
#
#  Mechanical Gantry Calibration
#  
#  Requires TMC2209 drivers with UART control, some tuning and perhaps 
#  some printed endstops.
#
#  Article on my website:
#  https://strayr.github.io/marlin/klipper/2022/08/27/g34.html
#
#  Based on on (depricated) M915 and now alternate G34 from Marlin
#  I beleive Prusa use this, certainly there's older videos advising to just
#  ram the gantry at full current into the the z-max stops.
#
#  It moves the gantry to the top of the travel, drops the current and then
#  does a force move to force the steppers to stall against the physical end
#  stops, transfering the level of the frame to the gantry. 
#
#  This is the only way to programatically level a multi-stepper single-driver 
#  gantry. It may also help with a dual-driver gantry on a bed-slinger design
#  or where the plane of the bed is less trustworthy than the frame.
#
#  It's particularly risky doing Z_TILT_ADJUST and SCREWS_TILT_CALCULATE
#  without a mechanical reference as if one side of the gantry or bed is prone
#  to droop, over time both bed and gantry will skew excessively but still read
#  as level, so this can help transfer "level" from the frame to the gantry and
#  then to the bed.
#
#  I don't recommend doing this in a START_PRINT, I call this if a 
#  SCREWS_TILT_CALCULATE shows some drift, althoughon an Ender 3 type printer
#  it's prudent to check the v-slot rollers for correct adjustment if drift is
#  observed.
#
#  It's probably best to run this and then do SCREWS_TILT_CALCULATE
#  until the bed is really level. IF you have dual Z steppers you can then
#  use Z_TILT_ADJUST for subsequent leveling of the gantry but make sure you
#  use the same points for gantry level as you use in SCREWS_TILT_CALCULATE
#
#  It may damage your printer if you do this at too high a current, or don't
#  have proper endstops.
#  
#            HERE BE DRAGONS!
#            YOU WERE WARNED!
#
#  Here's a video of this in action
#  https://www.youtube.com/watch?v=aVdIeIIpUAk
#  and the endstops for 2020 v-slot
#  https://github.com/strayr/small-fff-projects/tree/main/Z_endstops


[gcode_macro MECHANICAL_GANTRY_CALIBRATION]
gcode:
    ### SET THIS DEFAULT CARFULLY - start really low
    {% set my_current = params.CURRENT|default(0.12)|float %} ; adjust crash current on the fly :D
    ###
    {% set oldcurrent = printer.configfile.settings["tmc2209 stepper_z"].run_current %} ; TODO: Find runtime current settings
    {% set oldhold = printer.configfile.settings["tmc2209 stepper_z"].hold_current %} 
    {% set x_max = printer.toolhead.axis_maximum.x %} 
    {% set y_max = printer.toolhead.axis_maximum.y %} 
    {% set z_max = printer.toolhead.axis_maximum.z %} 
    {% set fast_move_z = printer.configfile.settings["printer"].max_z_velocity %}
    {% set fast_move = printer.configfile.settings["printer"].max_velocity %}
    M117 {printer.homed_axes}
    {% if printer.homed_axes != 'xyz' %}
        G28							#Home All Axes
    {% endif %}
    G90 ; absolute
    G0 X{x_max / 2} Y{y_max / 2} F{fast_move * 30 } ;put toolhead in the center of the gantry

    G0 Z{z_max -1} F{fast_move_z * 60 } ; go to the Z-max at speed max z speed
    
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={my_current} ; drop current on Z stepper
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={my_current}
    
    G4 P200 ; Probably not necessary, it is here just for sure

    SET_KINEMATIC_POSITION Z={z_max - 22} ; Trick printer into beleiving the gantry is 12mm lower than it is

    G1 Z{z_max -2} F{6 * 60} ; try to move 10mm up
    G4 P200 ; wait
    G1 Z{z_max -6} F{6 * 60} ; move 4mm down
    G4 P200 ; same as the first one
    
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={oldcurrent} HOLDCURRENT={oldhold}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={oldcurrent} HOLDCURRENT={oldhold}

    G1 Z{z_max -30} F{6 * 60} ; move to 30mm below z-max to allow homing movement

    G4 P200 ; same as the first one
    G28 Z ; we MUST home again as the ganty is really in the wrong place.

[gcode_macro G34]
gcode:
    MECHANICAL_GANTRY_CALIBRATION

[force_move]
enable_force_move: true ; enable FORCE_MOVE and SET_KINEMATIC_POSITION

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.490
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.921
#*# pid_ki = 1.234
#*# pid_kd = 880.049
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.225000, -0.110000, 0.022500, 0.077500
#*# 	  -0.185000, -0.142500, -0.035000, -0.042500
#*# 	  -0.130000, -0.105000, -0.040000, -0.077500
#*# 	  -0.177500, -0.117500, -0.047500, -0.020000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 212.0
#*# min_y = 0.0
#*# max_y = 178.98
